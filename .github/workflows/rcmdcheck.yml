on: push

name: R-CMD-check

jobs:
  R-CMD-check:


    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        # - { os: windows-latest, r: '4.0'}
        - { os: macOS-latest, r: '4.0'}
        - { os: ubuntu-18.04, r: '4.0', cran: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:

      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-pandoc@v1

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v1
        with:
          extra-packages: rcmdcheck

      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual', '--as-cran'), error_on = 'error', check_dir = 'check')"

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == '3.6'
        run: |
          Rscript -e "remotes::install_cran('covr')"
          Rscript -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'
